<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<!-- author : yangsong date : 2017-08-16 18:19:34 version : 1.0 -->
<mapper namespace="com.jinpaihushi.jphs.price.dao.PriceNurseDao">

	<sql id="field">
		PN.id, PN.goods_id, PN.price_part_id, PN.price, PN.status,
		PN.create_time, PN.creator_id, PN.creator_name
	</sql>

	<sql id="fieldGlobal">
		PN.id PN_id, PN.goods_id PN_goods_id, PN.price_part_id
		PN_price_part_id, PN.price PN_price, PN.status PN_status,
		PN.create_time PN_create_time, PN.creator_id PN_creator_id,
		PN.creator_name PN_creator_name
	</sql>

	<sql id="fieldWithAlias">
		PN.id id, PN.goods_id goodsId, PN.price_part_id
		pricePartId, PN.price price, PN.status status, PN.create_time
		createTime, PN.creator_id creatorId, PN.creator_name creatorName
	</sql>

	<sql id="condition">
		<if test="id!=null and id!=''">
			AND PN.id=#{id}
		</if>
		<if test="goodsId!=null and goodsId!=''">
			AND PN.goods_id=#{goodsId}
		</if>
		<if test="pricePartId!=null and pricePartId!=''">
			AND PN.price_part_id=#{pricePartId}
		</if>
		<if test="price!=null">
			AND PN.price=#{price}
		</if>
		<if test="status!=null">
			AND PN.status=#{status}
		</if>
		<if test="createTime!=null">
			AND PN.create_time=#{createTime}
		</if>
		<if test="creatorId!=null and creatorId!=''">
			AND PN.creator_id=#{creatorId}
		</if>
		<if test="creatorName!=null and creatorName!=''">
			AND PN.creator_name=#{creatorName}
		</if>
	</sql>

	<sql id="dynamicWhere">
		<where>
			<include refid="condition" />
		</where>
	</sql>

	<sql id="queryWhere">
		<where>
			<if test="id!=null and id!=''">
				AND PN.id LIKE CONCAT('%', #{id}, '%')
			</if>
			<if test="goodsId!=null and goodsId!=''">
				AND PN.goods_id LIKE CONCAT('%', #{goodsId}, '%')
			</if>
			<if test="pricePartId!=null and pricePartId!=''">
				AND PN.price_part_id LIKE CONCAT('%', #{pricePartId},
				'%')
			</if>
			<if test="price!=null">
				AND PN.price=#{price}
			</if>
			<if test="status!=null">
				AND PN.status=#{status}
			</if>
			<if test="createTime!=null">
				AND PN.create_time=#{createTime}
			</if>
			<if test="creatorId!=null and creatorId!=''">
				AND PN.creator_id LIKE CONCAT('%', #{creatorId}, '%')
			</if>
			<if test="creatorName!=null and creatorName!=''">
				AND PN.creator_name LIKE CONCAT('%', #{creatorName}, '%')
			</if>
		</where>
	</sql>

	<sql id="dynamicSet">
		<set>
			<if test="id!=null">
				PN.id=#{id},
			</if>
			<if test="goodsId!=null">
				PN.goods_id=#{goodsId},
			</if>
			<if test="pricePartId!=null">
				PN.price_part_id=#{pricePartId},
			</if>
			<if test="price!=null">
				PN.price=#{price},
			</if>
			<if test="status!=null">
				PN.status=#{status},
			</if>
			<if test="createTime!=null">
				PN.create_time=#{createTime},
			</if>
			<if test="creatorId!=null">
				PN.creator_id=#{creatorId},
			</if>
			<if test="creatorName!=null">
				PN.creator_name=#{creatorName},
			</if>
		</set>
	</sql>

	<sql id="orderby">
		<if test="orderby != null">
			ORDER BY ${orderby}
		</if>
	</sql>

	<resultMap id="priceNurse" type="com.jinpaihushi.jphs.price.model.PriceNurse">
		<result property="id" column="id" javaType="String" jdbcType="VARCHAR"></result>
		<result property="goodsId" column="goods_id" javaType="String"
			jdbcType="VARCHAR"></result>
		<result property="pricePartId" column="price_part_id" javaType="String"
			jdbcType="VARCHAR"></result>
		<result property="price" column="price" javaType="Double"
			jdbcType="DECIMAL"></result>
		<result property="status" column="status" javaType="Integer"
			jdbcType="INTEGER"></result>
		<result property="createTime" column="create_time" javaType="Date"
			jdbcType="TIMESTAMP"></result>
		<result property="creatorId" column="creator_id" javaType="String"
			jdbcType="VARCHAR"></result>
		<result property="creatorName" column="creator_name" javaType="String"
			jdbcType="VARCHAR"></result>
	</resultMap>

	<resultMap id="priceNurseGlobal" type="com.jinpaihushi.jphs.price.model.PriceNurse">
		<result property="id" column="PN_id" javaType="String"
			jdbcType="VARCHAR"></result>
		<result property="goodsId" column="PN_goods_id" javaType="String"
			jdbcType="VARCHAR"></result>
		<result property="pricePartId" column="PN_price_part_id"
			javaType="String" jdbcType="VARCHAR"></result>
		<result property="price" column="PN_price" javaType="Double"
			jdbcType="DECIMAL"></result>
		<result property="status" column="PN_status" javaType="Integer"
			jdbcType="INTEGER"></result>
		<result property="createTime" column="PN_create_time" javaType="Date"
			jdbcType="TIMESTAMP"></result>
		<result property="creatorId" column="PN_creator_id" javaType="String"
			jdbcType="VARCHAR"></result>
		<result property="creatorName" column="PN_creator_name"
			javaType="String" jdbcType="VARCHAR"></result>
	</resultMap>

	<insert id="insert" useGeneratedKeys="true" keyProperty="id"
		parameterType="com.jinpaihushi.jphs.price.model.PriceNurse">
		INSERT INTO `PRICE_NURSE`(
		id, goods_id, price_part_id, price, status, create_time, creator_id,
		creator_name )VALUES(
		#{id,jdbcType=VARCHAR}, #{goodsId,jdbcType=VARCHAR}, #{pricePartId,jdbcType=VARCHAR},
		#{price,jdbcType=DECIMAL}, #{status,jdbcType=INTEGER},
		#{createTime,jdbcType=TIMESTAMP}, #{creatorId,jdbcType=VARCHAR},
		#{creatorName,jdbcType=VARCHAR} )
	</insert>

	<insert id="inserts" useGeneratedKeys="false" parameterType="list">
        <![CDATA[
        INSERT INTO `PRICE_NURSE`(
			id, goods_id, 
			price_part_id, price, 
			status, create_time, 
			creator_id, creator_name
        )]]>
		VALUES
		<foreach collection="list" item="item" index="index"
			separator=",">
			(
			#{item.id,jdbcType=VARCHAR},
			#{item.goodsId,jdbcType=VARCHAR},
			#{item.pricePartId,jdbcType=VARCHAR}, #{item.price,jdbcType=DECIMAL},
			#{item.status,jdbcType=INTEGER},
			#{item.createTime,jdbcType=TIMESTAMP},
			#{item.creatorId,jdbcType=VARCHAR},
			#{item.creatorName,jdbcType=VARCHAR} )
		</foreach>
	</insert>

	<delete id="deleteById">
		DELETE PN FROM `PRICE_NURSE` PN WHERE PN.ID = #{id}
	</delete>

	<update id="disableById">
		UPDATE `PRICE_NURSE` PN
		SET
		PN.STATUS = -1
		WHERE PN.ID = #{id}
	</update>

	<update id="update">
		UPDATE `PRICE_NURSE` PN
		<include refid="dynamicSet" />
		WHERE PN.ID = #{id}
	</update>

	<select id="load" resultMap="priceNurse">
		SELECT
		<include refid="field" />
		FROM `PRICE_NURSE` PN
		<include refid="dynamicWhere" />
	</select>

	<select id="count" resultType="java.lang.Integer">
		SELECT COUNT(*) FROM `PRICE_NURSE` PN
		<include refid="dynamicWhere" />
	</select>

	<select id="list" resultMap="priceNurse">
		SELECT
		<include refid="field" />
		FROM `PRICE_NURSE` PN
		<include refid="dynamicWhere" />
		<include refid="orderby" />
	</select>

	<select id="query" resultMap="priceNurse">
		SELECT
		<include refid="field" />
		FROM `PRICE_NURSE` PN
		<include refid="dynamicWhere" />
		<include refid="orderby" />
	</select>

	<select id="loadById" resultMap="priceNurse">
		SELECT
		<include refid="field" />
		FROM `PRICE_NURSE` PN
		WHERE PN.ID = #{id}
	</select>
	<select id="getServiceItems" resultType="java.util.HashMap">
		SELECT
		pn.goods_id,
		g.title,
		CASE
		WHEN min(pn.price) = max(pn.price) THEN
		min(pn.price)
		ELSE CONCAT( min(pn.price), '~', max(pn.price) )
		END AS
		price
		FROM
		price_nurse pn
		LEFT JOIN price_part pp ON pn.price_part_id =
		pp.id
		LEFT JOIN goods g ON pn.goods_id = g.id
		<where>
			AND pn.status =0
			<if test="userId!=null and userId!=''">
				AND pn.creator_id = #{userId}
			</if>
		</where>
		GROUP BY
		pn.goods_id
	</select>

	<delete id="deleteByUserAndGoods">
		DELETE PN
		FROM
		`PRICE_NURSE` PN
		WHERE
		PN.goods_id = #{goodsId}
		AND PN.creator_id = #{creatorId}
	</delete>


	<select id="getList" resultMap="priceNurse">
		SELECT
		pn.id,
		pn.price_part_id,
		pn.price,
		pn.goods_id
		FROM price_nurse pn
		WHERE pn.creator_id = #{creatorId}
		AND pn.goods_id = #{goodsId}
	</select>
	
	<update id="updatePriceNurse">
		UPDATE `PRICE_NURSE` PN
		SET
		PN.STATUS = -1
		WHERE pn.creator_id = #{creatorId}
		AND pn.goods_id = #{goodsId}
	</update>
	
	<select id="getModel" resultMap="priceNurse">
		SELECT
			pn.id
		FROM
			price_nurse pn
		WHERE
			pn.price_part_id = #{pricePartId}
		AND pn.creator_id = #{creatorId}
		AND pn.STATUS = 0
		 
	</select>
	
	<update id="updateModel">
		UPDATE `PRICE_NURSE` PN
		SET
		PN.PRICE = #{price}
		WHERE pn.creator_id = #{creatorId}
		AND pn.price_part_id = #{pricePartId}
	</update>
</mapper>
